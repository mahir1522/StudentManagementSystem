// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentManagementSystem.Models;

#nullable disable

namespace StudentManagementSystem.Migrations
{
    [DbContext(typeof(CourseContext))]
    [Migration("20240320145726_initials")]
    partial class initials
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StudentManagementSystem.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("GetNumberOfStudents")
                        .HasColumnType("int");

                    b.Property<string>("Instuctor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2004, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GetNumberOfStudents = 0,
                            Instuctor = "Holl",
                            Name = "Test",
                            RoomNumber = "2G12"
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(1984, 3, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GetNumberOfStudents = 0,
                            Instuctor = "Moll",
                            Name = "Test2",
                            RoomNumber = "4F31"
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2020, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GetNumberOfStudents = 0,
                            Instuctor = "helo",
                            Name = "test3",
                            RoomNumber = "5G12"
                        });
                });

            modelBuilder.Entity("StudentManagementSystem.Models.Student", b =>
                {
                    b.Property<int>("S_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("S_Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("S_Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            S_Id = 1,
                            CourseId = 1,
                            Email = "john@example.com",
                            Name = "John Mohn",
                            Status = 0
                        },
                        new
                        {
                            S_Id = 2,
                            CourseId = 2,
                            Email = "Smithwill@example.com",
                            Name = "Smith will",
                            Status = 0
                        },
                        new
                        {
                            S_Id = 3,
                            CourseId = 3,
                            Email = "Testing@gmail.com",
                            Name = "Test3",
                            Status = 0
                        },
                        new
                        {
                            S_Id = 4,
                            CourseId = 3,
                            Email = "Test4@gmail.com",
                            Name = "test4",
                            Status = 0
                        });
                });

            modelBuilder.Entity("StudentManagementSystem.Models.Student", b =>
                {
                    b.HasOne("StudentManagementSystem.Models.Course", "Course")
                        .WithMany("Students")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("StudentManagementSystem.Models.Course", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
